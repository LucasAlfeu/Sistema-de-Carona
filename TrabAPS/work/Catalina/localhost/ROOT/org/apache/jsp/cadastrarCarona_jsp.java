/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.30
 * Generated at: 2024-12-08 04:08:56 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;

public final class cadastrarCarona_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"pt-br\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("    <title>Cadastro de Carona</title>\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"styles/cadastroCarona.css\">\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<header>\r\n");
      out.write("    <nav>\r\n");
      out.write("        <ul>\r\n");
      out.write("            <li><a href=\"paginaPrincipal.jsp\">InÃ­cio</a></li>\r\n");
      out.write("            <li><a href=\"perfil.jsp\">Perfil</a></li>\r\n");
      out.write("            <li><a href=\"index.jsp\">Sair</a></li>\r\n");
      out.write("        </ul>\r\n");
      out.write("    </nav>\r\n");
      out.write("</header>\r\n");
      out.write("<main>\r\n");
      out.write("    <h1>Cadastrar Carona</h1>\r\n");
      out.write("    <form action=\"cadastrarCarona\" method=\"POST\">\r\n");
      out.write("        <label class=\"label-form\" for=\"saida\">SaÃ­da:</label>\r\n");
      out.write("        <input type=\"text\" id=\"saida\" name=\"saida\" required>\r\n");
      out.write("\r\n");
      out.write("        <label class=\"label-form\" for=\"chegada\">Chegada:</label>\r\n");
      out.write("        <input type=\"text\" id=\"chegada\" name=\"chegada\" required>\r\n");
      out.write("\r\n");
      out.write("        <label for=\"data\">Data:</label>\r\n");
      out.write("        <input type=\"date\" id=\"data\" name=\"data\" required>\r\n");
      out.write("\r\n");
      out.write("        <label class=\"label-form\" for=\"horario\">HorÃ¡rio:</label>\r\n");
      out.write("        <input type=\"time\" id=\"horario\" name=\"horario\" required>\r\n");
      out.write("\r\n");
      out.write("        <label class=\"label-form\" for=\"valor\">Valor:</label>\r\n");
      out.write("        <input type=\"number\" id=\"valor\" name=\"valor\" required>\r\n");
      out.write("\r\n");
      out.write("        <label class=\"label-form\" for=\"vagas\">Vagas:</label>\r\n");
      out.write("        <input type=\"number\" id=\"vagas\" name=\"vagas\" required>\r\n");
      out.write("\r\n");
      out.write("        <label  class=\"label-form\">Selecionar VeÃ­culo:</label>\r\n");
      out.write("        <div class=\"box\">\r\n");
      out.write("            <div class=\"box1\">\r\n");
      out.write("                <input type=\"radio\" id=\"veiculo1\" name=\"veiculo\" value=\"veiculo1\" checked>\r\n");
      out.write("                <label for=\"veiculo1\">VeÃ­culo 1</label>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"box1\">\r\n");
      out.write("                <input type=\"radio\" id=\"veiculo2\" name=\"veiculo\" value=\"veiculo2\">\r\n");
      out.write("                <label for=\"veiculo1\">VeÃ­culo 2</label>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"box1\">\r\n");
      out.write("                <input type=\"radio\" id=\"veiculo3\" name=\"veiculo\" value=\"veiculo3\">\r\n");
      out.write("                <label for=\"veiculo1\">VeÃ­culo 3</label>\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"box2\">\r\n");
      out.write("            <button type=\"submit\">Cadastrar</button>\r\n");
      out.write("            <a href=\"paginaPrincipal.jsp\">Cancelar</a>\r\n");
      out.write("        </div>\r\n");
      out.write("    </form>\r\n");
      out.write("</main>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
